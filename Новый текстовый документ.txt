using System;
using System.Data.Entity;
using System.Security.Claims;
using System.Threading.Tasks;
using Microsoft.AspNet.Identity;
using Microsoft.AspNet.Identity.EntityFramework;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace Racoonogram.Models
{
    // ¬ профиль пользовател€ можно добавить дополнительные данные, если указать больше свойств дл€ класса ApplicationUser. ѕодробности см. на странице https://go.microsoft.com/fwlink/?LinkID=317594.
    [MetadataType(typeof(AspNetUsers))]
    public partial class ApplicationUser : IdentityUser
    {
        
        public async Task<ClaimsIdentity> GenerateUserIdentityAsync(UserManager<ApplicationUser> manager)
        {
            // ќбратите внимание, что authenticationType должен совпадать с типом, определенным в CookieAuthenticationOptions.AuthenticationType
            var userIdentity = await manager.CreateIdentityAsync(this, DefaultAuthenticationTypes.ApplicationCookie);
            // «десь добавьте утверждени€ пользовател€
            return userIdentity;
        }
        
    }
    public class AspNetUsers
    {
        public string Id { get; set; }
        public string Email{ get; set; }
        public bool EmailConfirmed { get; set; }
        public string PasswordHash { get; set; }
        public string SecurityStamp { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public bool TwoFactorEnabled { get; set; }
        public DateTime LockoutEndDateUtc { get; set; }
        public bool LockoutEnabled { get; set; }
        public int AccessFailedCount { get; set; }
        public string UserName { get; set; }
        //public ICollection<Image> Images { get; set; }
        //public AspNetUsers()
        //{
        //    Images = new List<Image>();
        //}

    }
    // добавл€ем модель Image
    public class Image
    {
        public int ImageId { get; set; }
        public string AspNetUsersId { get; set; }
        public string Category { get; set; }
        public string KeyWords { get; set; }
        public double Price { get; set; }
        public string Description { get; set; }
        public string Url { get; set; }
        public DateTime Date { get; set; }
        public AspNetUsers AspNetUsers { get; set; }
    }
    public class Order
    {
        public int OrderId { get; set; }
        public int ImageId { get; set; }
        public string BuyerEmail { get; set; }
        public DateTime BuyingDate { get; set; }
    }

    public class QueryHistory
    {
        public int Id { get; set; }
        public string QuerySting { get; set; }
        public DateTime QueryDate { get; set; }
    }
    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
    {
        public DbSet<Image> Images { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<QueryHistory> QueryHistories { get; set; }

        public ApplicationDbContext()
            : base("DefaultConnection", throwIfV1Schema: false)
        {
        }

        public static ApplicationDbContext Create()
        {
            return new ApplicationDbContext();
        }
    }
}